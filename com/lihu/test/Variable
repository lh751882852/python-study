# 变量赋值
int = 100
float = 100.0
str = "john"
'''
Numbers（数字） nub = 1
String（字符串） str = ""
List（列表）  t =[a,b,c]
Tuple（元组） 
Dictionary（字典）
'''
print(int, float, str)

int, float, str, name = 121, 543.0, "str", "fhak"
print(int, float, str, name)

int, float, str, name = "121" + "456", 543.0, 123, "fhak"
print(int, float, str, name)

print("###########################################################################################")
var1 = 1
var2 = 10
print(var1)
'''
del 会删除变量
Traceback (most recent call last):
  File "E:/python-space/first-learn/com/lihu/test/Variable", line 25, in <module>
100 100.0 john
    print(var1)
    NameError: name 'var1' is not defined
'''
# del var1
print(var1)
print("###########################################################################################")
str = "skrsko"
print(str[0: 2])
print(str[-1])
print(str[-4: -1])
print(str[-4: 6])
# 越界 不会报数组下标越界
print(str[-4: 7])

# * 表示重复
print("###########################################################################################")
print((str + " ") * 3)

# 列表
'''
List（列表） 是 Python 中使用最频繁的数据类型。

列表可以完成大多数集合类的数据结构实现。它支持字符，数字，字符串甚至可以包含列表（即嵌套）。

列表用 [ ] 标识，是 python 最通用的复合数据类型。

列表中值的切割也可以用到变量 [头下标:尾下标] ，就可以截取相应的列表，从左到右索引默认 0 开始，从右到左索引默认 -1 开始，下标可以为空表示取到头或尾
'''
array = [1, 2, 3, "star", str]

print(array)

'''
元组是另一个数据类型，类似于 List（列表）。

元组用 () 标识。内部元素用逗号隔开。但是元组不能二次赋值，相当于只读列表。
'''

tuple = ['runoob', 786, 2.23, 'john', 70.2]
list = ['runoob', 786, 2.23, 'john', 70.2]
tuple[2] = 1000  # 元组中是非法应用
list[2] = 1000  # 列表中是合法应用

'''
字典(dictionary)是除列表以外python之中最灵活的内置数据结构类型。列表是有序的对象集合，字典是无序的对象集合。

两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。

字典用"{ }"标识。字典由索引(key)和它对应的值value组成。
'''
dict = {'one': "This is one", 2: "This is two"}

tinydict = {'name': 'john', 'code': 6734, 'dept': 'sales'}

print(dict['one'])  # 输出键为'one' 的值
print(dict[2])  # 输出键为 2 的值

print(tinydict)  # 输出完整的字典
print(tinydict.keys())  # 输出所有键
print(tinydict.values())  # 输出所有值
